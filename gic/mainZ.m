s = dbstack;
n = s(1).name;

D = readEDIXML('./data/iris/MBB05c_B6a.xml')
break

N   = size(B,1);
f   = [0:N/2]'/N;

IN   = dB;
INs  = labels(4:5);
INs2 = labels2(4:5);

meth = 'rectangular';
df   = 20;
methstr = sprintf('Method = Rectangular; df = %d',df);
%df = []; % Use points generated by evalfreq.

meth = 'parzen';
methstr = 'Method = Parzen';
df = []; % Use points generated by evalfreq.

%meth = 'bartlett';
%methstr = 'Method = Bartlett';
%df = []; % Use points generated by evalfreq.

tit  = sprintf('%s; Input = dB/dt; %s',short,methstr);

ts1 = datestr(dn(1),30);
ts2 = datestr(dn(end),30);

Itr = [1:size(IN,1)];
Ite = [1:size(IN,1)];

% Training points (in-sample)
%Itr = [1:2*86400];
% Test points (out-of-sample)
%Ite = [2*86400+1:size(IN,1)];

if (1)
    Nf      = 1600;
    tx      = exp(-[0:Nf]/Nf);
    Ef(:,1) = filter([0,tx/sum(tx)],1,E(:,1));
    Ef(:,2) = filter([0,tx/sum(tx)],1,E(:,2));
else
    Ef = 0*E;
    Nf = 0;
end

E = E-Ef;

fprintf('\n')
fprintf('%s: Computing transfer function.\n',n)
[ZR,feR] = transferfnFD(IN(Itr,:),E(Itr,:),2,meth,df);
HR       = Z2H(feR,ZR,f);
HR       = fftshift(HR,1);
NR       = (size(HR,1)-1)/2;
tR       = [-NR:NR]';

fprintf('\n')
fprintf('%s: Computing interpolated transfer function.\n',n)
% Interpolate transfer function onto original frequency grid
ZRi = Zinterp(feR,ZR,f);

fprintf('\n')
fprintf('%s: Computing predictions.\n',n)
% Predict using interpolated transfer function
EpR = Zpredict(feR,ZR,IN);

% Transfer Function Phase
PR  = (180/pi)*atan2(imag(ZR),real(ZR));

pev(1) = pe(E(Itr,1),EpR(Itr,1));
pev(2) = pe(E(Itr,2),EpR(Itr,2));
fprintf('\n')
fprintf('%s: In-sample\n',n);
fprintf('%s: x: Nf = %04d\tpe = %0.2f\n',n,Nf,pev(1))
fprintf('%s: y: Nf = %04d\tpe = %0.2f\n',n,Nf,pev(2))

pev(1) = pe(E(Ite,1),EpR(Ite,1));
pev(2) = pe(E(Ite,2),EpR(Ite,2));
fprintf('%s: Out-of-sample\n',n);
fprintf('%s: x: Nf = %04d\tpe = %0.2f\n',n,Nf,pev(1))
fprintf('%s: y: Nf = %04d\tpe = %0.2f\n',n,Nf,pev(2))
fprintf('\n')

fn = 0; % Figure number

fn = fn+1;
figure(fn);clf;
    hold on;grid on;
    plot(tR/60,HR(:,1),'m','LineWidth',2)
    plot(tR/60,HR(:,2),'b','LineWidth',2)
    plot(tR/60,HR(:,3),'k','LineWidth',2)
    plot(tR/60,HR(:,4),'r','LineWidth',2)
    title(tit)
    legend('H_{xx}','H_{xy}','H_{yx}','H_{yy}')
    %set(gca,'XLim',[-10 20])
    %set(gca,'XTick',[-10:5:20])
    xlabel('t [min]')
    fname = sprintf('%s_H_%s-%s',short,ts1,ts2);
    plotcmds(fname,writeimgs)

fn = fn+1;
figure(fn);clf;
    loglog(NaN,0,'m','LineWidth',3);
    hold on;grid on;
    loglog(NaN,0,'b','LineWidth',3);
    loglog(NaN,0,'k','LineWidth',3)
    loglog(NaN,0,'r','LineWidth',3)
    loglog(feR(2:end),abs(ZR(2:end,1)),'m','LineWidth',2);
    loglog(feR(2:end),abs(ZR(2:end,2)),'b','LineWidth',2);
    loglog(feR(2:end),abs(ZR(2:end,3)),'k','LineWidth',2);
    loglog(feR(2:end),abs(ZR(2:end,4)),'r','LineWidth',2);
    %loglog(f(2:end),abs(ZRi(2:end,1)),'k.');
    title(tit)
    legend('Z_{xx}','Z_{xy}','Z_{yx}','Z_{yy}')
    xlabel('f [Hz]')
    fname = sprintf('%s_Z_vs_f_%s-%s',short,ts1,ts2);
    plotcmds(fname,writeimgs)

fn = fn+1;
figure(fn);clf;
    loglog(NaN,0,'m','LineWidth',3);
    hold on;grid on;
    loglog(NaN,0,'b','LineWidth',3);
    loglog(NaN,0,'k','LineWidth',3)
    loglog(NaN,0,'r','LineWidth',3)
    loglog(1./feR(2:end),abs(ZR(2:end,1)),'m','LineWidth',2);
    loglog(1./feR(2:end),abs(ZR(2:end,2)),'b','LineWidth',2);
    loglog(1./feR(2:end),abs(ZR(2:end,3)),'k','LineWidth',2);
    loglog(1./feR(2:end),abs(ZR(2:end,4)),'r','LineWidth',2);
    %loglog(1./f(2:end),abs(ZRi(2:end,1)),'k.');
    title(tit)
    legend('Z_{xx}','Z_{xy}','Z_{yx}','Z_{yy}','Location','SouthEast')
    xlabel('T [s]')
    fname = sprintf('%s_Z_vs_T_%s-%s',short,ts1,ts2);
    plotcmds(fname,writeimgs)

fn = fn+1;
figure(fn);clf
    plot(NaN,0,'b','LineWidth',3);
    hold on;grid on;
    plot(NaN,0,'k','LineWidth',3)
    plot(feR(2:end),PR(2:end,1),'m','LineWidth',2);
    plot(feR(2:end),PR(2:end,2),'b','LineWidth',2);
    plot(feR(2:end),PR(2:end,3),'k','LineWidth',2);
    plot(feR(2:end),PR(2:end,4),'r','LineWidth',2);
    title(tit)
    legend('\phi_{xx}','\phi_{xy}','\phi_{yx}','\phi_{yy}')
    xlabel('f [Hz]')
    fname = sprintf('%s_Phase_vs_f_%s-%s',short,ts1,ts2);
    plotcmds(fname,writeimgs)

fn = fn+1;
figure(fn);clf
    semilogx(NaN,0,'b','LineWidth',3);
    hold on;grid on;
    semilogx(NaN,0,'k','LineWidth',3)
    semilogx(1./feR(2:end),PR(2:end,1),'m','LineWidth',2);
    semilogx(1./feR(2:end),PR(2:end,2),'b','LineWidth',2);
    semilogx(1./feR(2:end),PR(2:end,3),'k','LineWidth',2);
    semilogx(1./feR(2:end),PR(2:end,4),'r','LineWidth',2);
    title(tit)
    legend('\phi_{xx}','\phi_{xy}','\phi_{yx}','\phi_{yy}')
    xlabel('T [s]')
    fname = sprintf('%s_Phase_vs_T_%s-%s',short,ts1,ts2);
    plotcmds(fname,writeimgs)

t = [0:size(E,1)-1]'/86400;

ts1 = datestr(dn(1),30);
ts2 = datestr(dn(end),30);

% Plot input and output on same scale
for i = 1:2
    fn = fn+1;
    figure(fn);clf;
        plot(NaN,0,'g','LineWidth',3);
        hold on;grid on;
        plot(NaN,0,'m','LineWidth',3)
        if (i == 1)
            plot(t,IN(:,2),'g');
            plot(t,E(:,1),'m');
            legend(INs{2},'E_x')
            fname = sprintf('%s_%s_E_x_%s-%s',short,INs2{2},ts1,ts2);
        else
            plot(t,IN(:,1),'g');
            plot(t,E(:,2),'m');
            legend(INs{1},'E_y')
            fname = sprintf('%s_%s_E_y_%s-%s',short,INs2{1},ts1,ts2);
        end

        xlabel(xlab)
        title(tit)
        plotcmds(fname,writeimgs)
end

% Plot prediction vs model
for i = 1:2
    fn = fn+1;
    figure(fn);clf;
        plot(t,E(:,i)+Ef(:,i),'m')  
        hold on;grid on;
        plot(t,E(:,i),'k')
        plot(t,real(EpR(:,i)),'r')
        xlabel(xlab)
        title(tit)
        comp = 'x';if (i == 2),comp = 'y';end
        legend(...
                ['E_',comp,' measured'],...
                ['E_',comp,' filtered'],...
                sprintf('E_%s predicted; PE = %.2f',comp,pev(i))...
            )
    ts1 = datestr(dn(1),30);
    ts2 = datestr(dn(end),30);
    fname = sprintf('%s_E%s_predicted_%s-%s',short,comp,ts1,ts2);
    plotcmds(fname,writeimgs)
end

break

% 1 day of predictions per plot
ta = [0:size(E,1)-1]'/3600;
Nd = floor(size(E,1)/86400);

for j = [1:Nd]
    I = [86400*(j-1)+1:86400*j];
    t = ta(I)-ta(I(1));
    for i = 1:2
        pev(i) = pe(E(I,i)-Ef(I,i),EpR(I,i));
        comp = 'x';
        if (i == 2)
            comp = 'y';
        end
        fprintf('dir = %s\tNf = %04d\tpe = %0.2f\n',comp,Nf,pev(i))
        
        fn = fn+1;
        figure(fn);clf;
            
            plot(NaN,0,'b','LineWidth',3);hold on 
            plot(NaN,0,'k','LineWidth',3)  
            plot(NaN,0,'r','LineWidth',3)  

            plot(t,E(I,i),'b')  
            hold on;grid on;
            plot(t,E(I,i)-Ef(I,i),'k')
            plot(t,real(EpR(I,i)),'r')
            title(tit)
            xlab = ['Hours since ',datestr(dn(I(1)))];
            xlabel(xlab)
            set(gca,'XTick',[0:4:24])
            set(gca,'XLim',[0 24])
            legend(...
                    ['E_',comp,' measured'],...
                    ['E_',comp,' filtered'],...
                    sprintf('E_%s predicted; PE = %.2f',comp,pev(i))...
                )
            title(tit)
            ts = datestr(dn(I(1)),30);
            fname = sprintf('%s_E%s_predicted_%s',short,comp,ts);
            plotcmds(fname,writeimgs)
    end
end

